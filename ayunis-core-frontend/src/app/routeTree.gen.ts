/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as onboardingRegisterImport } from './routes/(onboarding)/register'
import { Route as onboardingLoginImport } from './routes/(onboarding)/login'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings.index'
import { Route as AuthenticatedPromptsIndexImport } from './routes/_authenticated/prompts.index'
import { Route as AuthenticatedChatIndexImport } from './routes/_authenticated/chat.index'
import { Route as AuthenticatedAgentsIndexImport } from './routes/_authenticated/agents.index'
import { Route as AuthenticatedAdminSettingsIndexImport } from './routes/_authenticated/admin-settings.index'
import { Route as AuthenticatedSettingsGeneralImport } from './routes/_authenticated/settings.general'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings.account'
import { Route as AuthenticatedChatsThreadIdImport } from './routes/_authenticated/chats.$threadId'
import { Route as AuthenticatedAdminSettingsUsersImport } from './routes/_authenticated/admin-settings.users'
import { Route as AuthenticatedAdminSettingsModelsImport } from './routes/_authenticated/admin-settings.models'
import { Route as AuthenticatedAdminSettingsBillingImport } from './routes/_authenticated/admin-settings.billing'
import { Route as onboardingInvitesTokenAcceptImport } from './routes/(onboarding)/invites.$token.accept'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const onboardingRegisterRoute = onboardingRegisterImport.update({
  id: '/(onboarding)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const onboardingLoginRoute = onboardingLoginImport.update({
  id: '/(onboarding)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedPromptsIndexRoute = AuthenticatedPromptsIndexImport.update({
  id: '/prompts/',
  path: '/prompts/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedChatIndexRoute = AuthenticatedChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAgentsIndexRoute = AuthenticatedAgentsIndexImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminSettingsIndexRoute =
  AuthenticatedAdminSettingsIndexImport.update({
    id: '/admin-settings/',
    path: '/admin-settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsGeneralRoute =
  AuthenticatedSettingsGeneralImport.update({
    id: '/settings/general',
    path: '/settings/general',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/settings/account',
    path: '/settings/account',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedChatsThreadIdRoute = AuthenticatedChatsThreadIdImport.update(
  {
    id: '/chats/$threadId',
    path: '/chats/$threadId',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAdminSettingsUsersRoute =
  AuthenticatedAdminSettingsUsersImport.update({
    id: '/admin-settings/users',
    path: '/admin-settings/users',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminSettingsModelsRoute =
  AuthenticatedAdminSettingsModelsImport.update({
    id: '/admin-settings/models',
    path: '/admin-settings/models',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdminSettingsBillingRoute =
  AuthenticatedAdminSettingsBillingImport.update({
    id: '/admin-settings/billing',
    path: '/admin-settings/billing',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const onboardingInvitesTokenAcceptRoute =
  onboardingInvitesTokenAcceptImport.update({
    id: '/(onboarding)/invites/$token/accept',
    path: '/invites/$token/accept',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/(onboarding)/login': {
      id: '/(onboarding)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof onboardingLoginImport
      parentRoute: typeof rootRoute
    }
    '/(onboarding)/register': {
      id: '/(onboarding)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof onboardingRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin-settings/billing': {
      id: '/_authenticated/admin-settings/billing'
      path: '/admin-settings/billing'
      fullPath: '/admin-settings/billing'
      preLoaderRoute: typeof AuthenticatedAdminSettingsBillingImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin-settings/models': {
      id: '/_authenticated/admin-settings/models'
      path: '/admin-settings/models'
      fullPath: '/admin-settings/models'
      preLoaderRoute: typeof AuthenticatedAdminSettingsModelsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin-settings/users': {
      id: '/_authenticated/admin-settings/users'
      path: '/admin-settings/users'
      fullPath: '/admin-settings/users'
      preLoaderRoute: typeof AuthenticatedAdminSettingsUsersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/chats/$threadId': {
      id: '/_authenticated/chats/$threadId'
      path: '/chats/$threadId'
      fullPath: '/chats/$threadId'
      preLoaderRoute: typeof AuthenticatedChatsThreadIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/general': {
      id: '/_authenticated/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof AuthenticatedSettingsGeneralImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin-settings/': {
      id: '/_authenticated/admin-settings/'
      path: '/admin-settings'
      fullPath: '/admin-settings'
      preLoaderRoute: typeof AuthenticatedAdminSettingsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/agents/': {
      id: '/_authenticated/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AuthenticatedAgentsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/chat/': {
      id: '/_authenticated/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthenticatedChatIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/prompts/': {
      id: '/_authenticated/prompts/'
      path: '/prompts'
      fullPath: '/prompts'
      preLoaderRoute: typeof AuthenticatedPromptsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/(onboarding)/invites/$token/accept': {
      id: '/(onboarding)/invites/$token/accept'
      path: '/invites/$token/accept'
      fullPath: '/invites/$token/accept'
      preLoaderRoute: typeof onboardingInvitesTokenAcceptImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAdminSettingsBillingRoute: typeof AuthenticatedAdminSettingsBillingRoute
  AuthenticatedAdminSettingsModelsRoute: typeof AuthenticatedAdminSettingsModelsRoute
  AuthenticatedAdminSettingsUsersRoute: typeof AuthenticatedAdminSettingsUsersRoute
  AuthenticatedChatsThreadIdRoute: typeof AuthenticatedChatsThreadIdRoute
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsGeneralRoute: typeof AuthenticatedSettingsGeneralRoute
  AuthenticatedAdminSettingsIndexRoute: typeof AuthenticatedAdminSettingsIndexRoute
  AuthenticatedAgentsIndexRoute: typeof AuthenticatedAgentsIndexRoute
  AuthenticatedChatIndexRoute: typeof AuthenticatedChatIndexRoute
  AuthenticatedPromptsIndexRoute: typeof AuthenticatedPromptsIndexRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminSettingsBillingRoute:
    AuthenticatedAdminSettingsBillingRoute,
  AuthenticatedAdminSettingsModelsRoute: AuthenticatedAdminSettingsModelsRoute,
  AuthenticatedAdminSettingsUsersRoute: AuthenticatedAdminSettingsUsersRoute,
  AuthenticatedChatsThreadIdRoute: AuthenticatedChatsThreadIdRoute,
  AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
  AuthenticatedSettingsGeneralRoute: AuthenticatedSettingsGeneralRoute,
  AuthenticatedAdminSettingsIndexRoute: AuthenticatedAdminSettingsIndexRoute,
  AuthenticatedAgentsIndexRoute: AuthenticatedAgentsIndexRoute,
  AuthenticatedChatIndexRoute: AuthenticatedChatIndexRoute,
  AuthenticatedPromptsIndexRoute: AuthenticatedPromptsIndexRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof onboardingLoginRoute
  '/register': typeof onboardingRegisterRoute
  '/admin-settings/billing': typeof AuthenticatedAdminSettingsBillingRoute
  '/admin-settings/models': typeof AuthenticatedAdminSettingsModelsRoute
  '/admin-settings/users': typeof AuthenticatedAdminSettingsUsersRoute
  '/chats/$threadId': typeof AuthenticatedChatsThreadIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/admin-settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/chat': typeof AuthenticatedChatIndexRoute
  '/prompts': typeof AuthenticatedPromptsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/invites/$token/accept': typeof onboardingInvitesTokenAcceptRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof onboardingLoginRoute
  '/register': typeof onboardingRegisterRoute
  '/admin-settings/billing': typeof AuthenticatedAdminSettingsBillingRoute
  '/admin-settings/models': typeof AuthenticatedAdminSettingsModelsRoute
  '/admin-settings/users': typeof AuthenticatedAdminSettingsUsersRoute
  '/chats/$threadId': typeof AuthenticatedChatsThreadIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/admin-settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/chat': typeof AuthenticatedChatIndexRoute
  '/prompts': typeof AuthenticatedPromptsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/invites/$token/accept': typeof onboardingInvitesTokenAcceptRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/(onboarding)/login': typeof onboardingLoginRoute
  '/(onboarding)/register': typeof onboardingRegisterRoute
  '/_authenticated/admin-settings/billing': typeof AuthenticatedAdminSettingsBillingRoute
  '/_authenticated/admin-settings/models': typeof AuthenticatedAdminSettingsModelsRoute
  '/_authenticated/admin-settings/users': typeof AuthenticatedAdminSettingsUsersRoute
  '/_authenticated/chats/$threadId': typeof AuthenticatedChatsThreadIdRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/_authenticated/admin-settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/_authenticated/agents/': typeof AuthenticatedAgentsIndexRoute
  '/_authenticated/chat/': typeof AuthenticatedChatIndexRoute
  '/_authenticated/prompts/': typeof AuthenticatedPromptsIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/(onboarding)/invites/$token/accept': typeof onboardingInvitesTokenAcceptRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/admin-settings/billing'
    | '/admin-settings/models'
    | '/admin-settings/users'
    | '/chats/$threadId'
    | '/settings/account'
    | '/settings/general'
    | '/admin-settings'
    | '/agents'
    | '/chat'
    | '/prompts'
    | '/settings'
    | '/invites/$token/accept'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/admin-settings/billing'
    | '/admin-settings/models'
    | '/admin-settings/users'
    | '/chats/$threadId'
    | '/settings/account'
    | '/settings/general'
    | '/admin-settings'
    | '/agents'
    | '/chat'
    | '/prompts'
    | '/settings'
    | '/invites/$token/accept'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/(onboarding)/login'
    | '/(onboarding)/register'
    | '/_authenticated/admin-settings/billing'
    | '/_authenticated/admin-settings/models'
    | '/_authenticated/admin-settings/users'
    | '/_authenticated/chats/$threadId'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/general'
    | '/_authenticated/admin-settings/'
    | '/_authenticated/agents/'
    | '/_authenticated/chat/'
    | '/_authenticated/prompts/'
    | '/_authenticated/settings/'
    | '/(onboarding)/invites/$token/accept'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  onboardingLoginRoute: typeof onboardingLoginRoute
  onboardingRegisterRoute: typeof onboardingRegisterRoute
  onboardingInvitesTokenAcceptRoute: typeof onboardingInvitesTokenAcceptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  onboardingLoginRoute: onboardingLoginRoute,
  onboardingRegisterRoute: onboardingRegisterRoute,
  onboardingInvitesTokenAcceptRoute: onboardingInvitesTokenAcceptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/(onboarding)/login",
        "/(onboarding)/register",
        "/(onboarding)/invites/$token/accept"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin-settings/billing",
        "/_authenticated/admin-settings/models",
        "/_authenticated/admin-settings/users",
        "/_authenticated/chats/$threadId",
        "/_authenticated/settings/account",
        "/_authenticated/settings/general",
        "/_authenticated/admin-settings/",
        "/_authenticated/agents/",
        "/_authenticated/chat/",
        "/_authenticated/prompts/",
        "/_authenticated/settings/"
      ]
    },
    "/(onboarding)/login": {
      "filePath": "(onboarding)/login.tsx"
    },
    "/(onboarding)/register": {
      "filePath": "(onboarding)/register.tsx"
    },
    "/_authenticated/admin-settings/billing": {
      "filePath": "_authenticated/admin-settings.billing.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin-settings/models": {
      "filePath": "_authenticated/admin-settings.models.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin-settings/users": {
      "filePath": "_authenticated/admin-settings.users.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/$threadId": {
      "filePath": "_authenticated/chats.$threadId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings.account.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/general": {
      "filePath": "_authenticated/settings.general.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin-settings/": {
      "filePath": "_authenticated/admin-settings.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agents/": {
      "filePath": "_authenticated/agents.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chat/": {
      "filePath": "_authenticated/chat.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/prompts/": {
      "filePath": "_authenticated/prompts.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings.index.ts",
      "parent": "/_authenticated"
    },
    "/(onboarding)/invites/$token/accept": {
      "filePath": "(onboarding)/invites.$token.accept.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
